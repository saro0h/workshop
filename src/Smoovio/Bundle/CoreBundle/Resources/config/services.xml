<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="smoovio_core.movie_list.file">%kernel.root_dir%/Resources/movies/movies.json</parameter>
        <parameter key="smoovio.command.generate_featured_list.class">Smoovio\Bundle\CoreBundle\Command\GenerateFeaturedMovieListCommand</parameter>
        <parameter key="smoovio_core.command.import_test_data.class">Smoovio\Bundle\CoreBundle\Command\ImportTestDataCommand</parameter>
        <parameter key="smoovio_core.command.generate_featured_list.class">Smoovio\Bundle\CoreBundle\Command\GenerateFeaturedMovieListCommand</parameter>
        <parameter key="smoovio_core.registration.handler.class">Smoovio\Bundle\CoreBundle\User\Registration\RegistrationFormHandler</parameter>
        <parameter key="smoovio_core.user.manager.class">Smoovio\Bundle\CoreBundle\User\Manager\UserManager</parameter>
        <parameter key="smoovio_core.validator_unique_attribute.class">Smoovio\Bundle\CoreBundle\Validator\Constraints\UniqueAttributeValidator</parameter>
        <parameter key="smoovio_core.send_confirmation_mail_listener.class">Smoovio\Bundle\CoreBundle\EventListener\SendConfirmationMailListener</parameter>
        <parameter key="smoovio.mail.from">noreply@smoovio.de</parameter>
    </parameters>

    <services>
        <service id="smoovio_core.send_confirmation_mail_listener"
                 class="%smoovio_core.send_confirmation_mail_listener.class%">
            <argument type="service" id="mailer"/>
            <argument type="service" id="twig" />
            <argument>SmoovioPortalBundle:Mail:confirmation_mail.html.twig</argument>
            <argument>%smoovio.mail.from%</argument>
            <tag name="kernel.event_listener" event="smoovio_core.new_account_created" method="onNewAccountCreated" />
        </service>

        <service id="smoovio_core.validator_unique_attribute"
                 class="%smoovio_core.validator_unique_attribute.class%">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <tag name="validator.constraint_validator" alias="validator_unique_attribute"/>
        </service>

        <service id="smoovio_core.user.manager"
                 class="%smoovio_core.user.manager.class%">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="security.encoder_factory" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="smoovio_core.registration.handler"
                 class="%smoovio_core.registration.handler.class%">
            <argument type="service" id="smoovio_core.user.manager" />
        </service>

        <service id="smoovio.slugify" class="Cocur\Slugify\Slugify" />

        <service id="smoovio_core.command.generate_featured_list" class="%smoovio_core.command.generate_featured_list.class%">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <tag name="console.command" />
        </service>

        <service id="smoovio_core.repository.movielist"
                 class="Doctrine\ORM\EntityRepository"
                 factory-service="doctrine"
                 factory-method="getRepository">
            <argument>Smoovio\Bundle\CoreBundle\Entity\MovieList</argument>
        </service>
        <service id="smoovio_core.repository.movie"
                 class="Smoovio\Bundle\CoreBundle\Repository\MovieRepository"
                 factory-service="doctrine"
                 factory-method="getRepository">
            <argument>Smoovio\Bundle\CoreBundle\Entity\Movie</argument>
        </service>
        <service id="smoovio_core.repository.role"
                 class="Doctrine\ORM\EntityRepository"
                 factory-service="doctrine"
                 factory-method="getRepository">
            <argument>Smoovio\Bundle\CoreBundle\Entity\Role</argument>
        </service>
        <service id="smoovio_core.repository.director"
                 class="Doctrine\ORM\EntityRepository"
                 factory-service="doctrine"
                 factory-method="getRepository">
            <argument>Smoovio\Bundle\CoreBundle\Entity\Director</argument>
        </service>
        <service id="smoovio_core.repository.actor"
                 class="Doctrine\ORM\EntityRepository"
                 factory-service="doctrine"
                 factory-method="getRepository">
            <argument>Smoovio\Bundle\CoreBundle\Entity\Actor</argument>
        </service>
        <service id="smoovio_core.repository.genre"
                 class="Smoovio\Bundle\CoreBundle\Repository\GenreRepository"
                 factory-service="doctrine"
                 factory-method="getRepository">
            <argument>Smoovio\Bundle\CoreBundle\Entity\Genre</argument>
        </service>
    </services>
</container>
